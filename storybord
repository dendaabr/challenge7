
challenge 7

    1. DESIGN PATTERN
        [Monolith] MVC (Model View Controller)
        [Rest API] MCR (Model Controller Router)
    2. Template Engine
    3. Asynchronous
    4. Authentication


    1.  Melanjutkan project yang sudah dibuat pada chapter 
    2.  Gunakan design pattern MVC (Model View Controller) pada struktur kode yang bersifat monolithic
    3.  Gunakan design pattern MCR (Model Controller Router) pada struktur kode yang bersifat JSON (JavaScript Object Notation) REST API
    4.  Menggunakan asynchronous pada setiap function
    5.  Sesuaikan tabel database dengan konsep yang diinginkan
    6.  Membuat dua tingkatan user yaitu:
           - SuperAdmin memiliki hak akses ke semua data yang berada pada database, dynamic data authentication pada monolithic dashboard
           - PlayerUser memiliki hak akses terbatas sesuai dengan cakupan pada design game berbentuk JSON digunakan untuk login pada API
    7.  PlayerUser menggunakan JWT (JavaScript) authentication untuk login json
    8.  Antara player 1 dengan player lainnya bisa bertanding di satu endpoint room dengan menyediakan endpoint pembuatan room dengan input nama kemudian server akan   
        merespon dengan kode, sehingga dua user bisa bisa bermain bersama dengan room kode yang sama
    9.  Hasil dari setiap pertandingan akan di record ke database user_game_history dan list ditampilkan ke endpoint private yang bisa diakses hanya user.


